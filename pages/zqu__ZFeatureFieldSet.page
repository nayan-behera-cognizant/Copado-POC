<apex:page standardController="zqu__ZFeature__c" extensions="zqu.ZFeatureFieldSetController"  action="{!removeUselessData}">
  
  <apex:includeScript value="{!$Resource.zqu__jquery_1_9_1}" />
  <apex:includeScript value="{!URLFOR($Resource.zqu__ImagesAndJavascriptZip, '/js/jquery-ui-1.10.3.custom-compressed.js')}" />
  <apex:styleSheet value="{!URLFOR($Resource.zqu__ImagesAndJavascriptZip, 'jquery-ui-1103.css')}" />
  <apex:includeScript value="{!$Resource.zqu__JQuery_JSON}" />
  <apex:includeScript value="{!$Resource.zqu__JQuery_DataTables}" />
  <apex:includeScript value="{!$Resource.zqu__JQuery_jEditable}" />
  <apex:includeScript value="{!URLFOR($Resource.zqu__ImagesAndJavascriptZip, '/js/DataList-compressed.js')}" />
        
  <style>
    .fieldGroupTable {
      border: 1px solid #E0E3E5;
      width: 100% !important;
      margin: 5px 0px;
      border-bottom: 0px;
      border-collapse: collapse;
    }
    
    .fieldGroupHeader{
      background-color: #F2F3F3;
      border-bottom: 1px solid #E0E3E5;
      border-image: none;
      border-right: 1px solid #E0E3E5;
      padding: 5px 2px 3px 5px;
    }
    
    .fieldGroupRow td{
      padding: 5px 2px 3px 5px;
      border-bottom: 1px solid #E0E3E5;
    }
    
    .fieldsSection{
      margin: 20px 0 5px;
    }
    
    .sectionTitle{
      font-size: 13px;
      font-weight: bold;
    }
    
    .highlightRow{
      background-color: #E3F3FF;
    }
    
    .actionColumn{
      width: 3%;
    }
    
    .dialogClass {
      font-size: 12px;
    }
    
    .dataTable tr {
      border-bottom: 1px solid #E0E3E5;
    }
    
    .dataTable>thead>tr>th[class~=availabelFieldSetTableColumn] {
      background-color: #F2F3F3;
      border-image: none;
      border-right: 1px solid #E0E3E5;
      padding: 5px 2px 3px 5px;
    }
    
    .dataTable>tbody>tr>td[class~=availabelFieldSetTableColumn] {
      padding: 5px 2px 3px 5px;
    }
    
    .dataTables_empty{
      padding: 5px 0 5px 5px;
    }
    
    .dataTables_checkbox_column{
      width: 3% !important;
    }
    
  </style>
  
  <script>
    if(typeof $jq == 'undefined')
      $jq = jQuery.noConflict();
  
    function showFields(row){
      if(row.isRemoved)
        return;
      var apiName = row.getElementsByClassName('api_name')[0].innerHTML;
      showCustomFields(apiName);
    }
    
    function highlightRow(row){
      row.classList.add('highlightRow');
    }
    
    function removeHighlightedRow(row){
      row.classList.remove('highlightRow');
    }
    
    function disableRowClick(link){
      var row = link.parentNode.parentNode;
      row.isRemoved = true;
    }
    
    function showAvailableCustomFieldGroup(){
    
      var availableFieldSetDataTable = {};
      var dialog = $jq("#addNewFieldSetDialog").dialog({
                     title : '{!$Label.zqu__FIELD_SET_SELECT}',
                     modal : true,
                     width : $jq(window).width() * 0.8,
                     height : $jq(window).height() * 0.5,
                     autoOpen : false,
                     dialogClass : 'dialogClass',
                     buttons : [
                                 {
                                     text : '{!$Label.zqu__BUTTON_ADD}',
                                     click : function(){
                                                 var selectedValues = availableFieldSetDataTable.getSelectedValue();
                                                 if(selectedValues.length > 0){
                                                   var selectedValueString = '';
                                                   for(var index=0; index<selectedValues.length; index++){
                                                     selectedValueString += selectedValues[index] + ',';
                                                   }
                                                   selectedValueString = selectedValueString.substring(0, selectedValueString.length-1);
                                                   addCustomFieldGroup(selectedValueString);
                                                 }
                                                 dialog.dialog('close');
                                             }
                                 },
                                 {
                                     id : 'dialog_cancel',
                                     text : '{!$Label.zqu__BUTTON_CANCEL}',
                                     click : function(){
                                                 dialog.dialog('close');
                                             }
                                 }
                               ],
                     focus : function(){
                                 // Set focus on 'Cancel' button instead of first element (jQuery dialog issue)
                                 var cancelBtn = $jq.find('#dialog_cancel');
                                 cancelBtn[0].focus();
                             }
                   });
                 
    displayStatusModal();
    
    Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.ZFeatureFieldSetController.getAvailableCustomFieldGroup}',
                '{!zqu__ZFeature__c.zqu__ZuoraId__c}',
                function(result, event){
                  if (event.status) {
                    
                    var config = {
                                    tid : "availableFieldSetTable",
                                    data : {
                                               columnDefs : result.columnDefs,
                                               dataObjects : result.dataObjects
                                           },
                                    mSelect : {
                                                eleName : 'fieldSetApiName',
                                                valProp : 'name',
                                                styleCls : 'availabelFieldSetTableColumn dataTables_checkbox_column'
                                              },
                                    noRecordMessage : '{!$Label.zqu__FIELD_SET_NO_AVAILABLE_FOR_FEATURE}'
                                 }
                    availableFieldSetDataTable = new ZDataList(config);
                    availableFieldSetDataTable.dataTable();
                    
                    closeStatusModal();
                    dialog.dialog('open');
                  }
                });
    
    }
  </script>
  
  <c:StatusModal />
  <apex:form >
  <apex:dataTable id="fieldSetsTable" value="{!customFieldGroups}" var="customFieldGroup" styleClass="fieldGroupTable" headerClass="fieldGroupHeader" rowClasses="fieldGroupRow" 
                  onrowClick="showFields(this);"
                  onRowMouseOver="highlightRow(this);"
                  onrowmouseOut="removeHighlightedRow(this);" >
    <apex:column styleClass="actionColumn">
      <apex:facet name="header">{!$Label.zqu__CONFIG_LIST_ACTION}</apex:facet>
      
      <apex:commandLink action="{!removeCustomFieldGroup}" reRender="fieldSetsTable, customFieldsTable" status="loadingStatus" value="{!$Label.zqu__BUTTON_DEL}" onclick="disableRowClick(this);">
        <apex:param name="removedFieldSetName" value="{!customFieldGroup.name}" assignTo="{!removedFieldSetName}"/>
      </apex:commandLink>
      
    </apex:column>
    <apex:column >
      <apex:facet name="header">{!$Label.zqu__FIELD_SET_LABEL}</apex:facet>
      <apex:outputText value="{!customFieldGroup.label}"/>
    </apex:column>
    <apex:column styleClass="api_name">
      <apex:facet name="header">{!$Label.zqu__FIELD_SET_NAME}</apex:facet>
      <apex:outputText value="{!customFieldGroup.name}"/>
    </apex:column>
    <apex:column >
      <apex:facet name="header">{!$Label.zqu__FIELD_SET_DESCRIPTION}</apex:facet>
      <apex:outputText value="{!customFieldGroup.description}"/>
    </apex:column>
  </apex:dataTable>
  
  <button id="addNewFieldSet" onclick="showAvailableCustomFieldGroup(); return false;">{!$Label.FIELD_SET_ADD}</button>
  <div id="addNewFieldSetDialog">
    <table id="availableFieldSetTable" class="fieldGroupTable"/>
  </div>
  
  <apex:outputPanel layout="block" styleClass="fieldsSection">
    <apex:outputPanel styleClass="sectionTitle">{!$Label.zqu__FIELD_SET_FIELDS}</apex:outputPanel>
  </apex:outputPanel>

  <apex:dataTable id="customFieldsTable" value="{!customFields}" var="customField" styleClass="fieldGroupTable" headerClass="fieldGroupHeader" rowClasses="fieldGroupRow">
    <apex:column >
      <apex:facet name="header">{!$Label.zqu__FIELD_LABEL}</apex:facet>
      <apex:outputText value="{!customField.label}"/>
    </apex:column>
    <apex:column >
      <apex:facet name="header">{!$Label.zqu__FIELD_NAME}</apex:facet>
      <apex:outputText value="{!customField.name}"/>
    </apex:column>
    <apex:column >
      <apex:facet name="header">{!$Label.zqu__FIELD_TYPE}</apex:facet>
      <apex:outputText value="{!customField.type}"/>
    </apex:column>
  </apex:dataTable>
  
  <apex:actionFunction action="{!addCustomFieldGroup}" name="addCustomFieldGroup" reRender="fieldSetsTable" status="loadingStatus">
    <apex:param name="addedFieldSetNames" value="" assignTo="{!addedFieldSetNames}"/>
  </apex:actionFunction>
  
  <apex:actionFunction action="{!showCustomFields}" name="showCustomFields" reRender="customFieldsTable" status="loadingStatus">
    <apex:param name="selectedFieldSetName" value="" assignTo="{!selectedFieldSetName}"/>
  </apex:actionFunction>
  
  <apex:actionStatus startText="" stopText="" id="loadingStatus" onstart="javascript:displayStatusModal();" onstop="javascript:closeStatusModal();"/>
  
  </apex:form>
  
</apex:page>